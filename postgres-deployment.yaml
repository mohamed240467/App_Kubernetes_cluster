apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: postgres
    group: db
  name: postgres
  #namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  #strategy:
  #  rollingUpdate:
  #    maxSurge: 25%
  #    maxUnavailable: 25%
  #  type: RollingUpdate
  template:
    metadata:
      labels:
        app: postgres
        type: db
    spec:
      containers:
      - image: postgres:9.6-alpine
        #imagePullPolicy: IfNotPresent
        name: postgres
        ports:
          - containerPort: 5432
        envFrom:
          - configMapRef:
              name: postgres-config 
        volumeMounts:
          - mountPath: /var/lib/postgresql/data
            name: postgresdata
          # - mountPath: pg_stat_tmp/global.tmp
          #   name: pg-stat
        resources:
          requests:
           memory: "256Mi"
           cpu: "300m"
          limits:
            memory: "256Mi"
            cpu: "500m"
      #dnsPolicy: ClustelsrFirst
      #restartPolicy: Always
      #schedulerName: default-scheduler
      #securityContext: {}
      #terminationGracePeriodSeconds: 30
      volumes:
        - name: postgresdata
          persistentVolumeClaim:
            claimName: postgres-pvc
        # - name: pg-stat
        #   emptyDir: {}
##Add Volume to Deployment
#  apiVersion: v1
#  kind: PersistentVolumeClaim
#  metadata:
#    name: mypvc
#  spec:
#    resources:
#      requests:
#        storage: 1Gi
#    volumeMode: Filesystem
#    accessModes:
#      - ReadWriteOnce
#  status:
#    phase: Pending
#  
#status: {}
